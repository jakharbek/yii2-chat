<?php

namespace jakharbek\chat\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "chats".
 *
 * @property int $chat_id
 * @property string $guid
 * @property int $created_at
 * @property int $status
 * @property int $type
 * @property string $diolog_1
 * @property string $diolog_2
 * @property string $diolog_type
 *
 * @property ChatsUsers[] $chatsUsers
 * @property Messages[] $messages
 */
class Chats extends \yii\db\ActiveRecord
{

    public $diolog_type;
    public $diolog_1;
    public $diolog_2;

    const STATUS_ACTIVE = 1;
    const STATUS_INACTIVE = 0;

    const TYPE_PRIVATE = 1;

    /**
     * @return array
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'updatedAtAttribute' => false,

            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'chats';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['diolog_1', 'diolog_2', 'diolog_type'], 'required'],
            [['created_at', 'status', 'type'], 'default', 'value' => null],
            [['created_at', 'status', 'type'], 'integer'],
            [['guid'], 'string', 'max' => 255],
            [['guid'],'unique']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'chat_id'    => 'Chat ID',
            'guid'       => 'Guid',
            'created_at' => 'Created At',
            'status'     => 'Status',
            'type'       => 'Type',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getChatsUsers()
    {
        return $this->hasMany(ChatsUsers::className(), ['chat_id' => 'chat_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMessages()
    {
        return $this->hasMany(Messages::className(), ['to_chat_id' => 'chat_id']);
    }

    /**
     * @return string
     */
    public function generateGuid()
    {
        return $this->guid = $this->diolog_1.":".$this->diolog_2.":".$this->diolog_type;
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        if(strlen($this->guid) == 0){
            $this->generateGuid();
        }
        
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     * @return ChatsQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new ChatsQuery(get_called_class());
    }
}
